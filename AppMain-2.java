/**
 *James Ochieng
 * Digital Clock
 * 3/18/2021
 * */
package org.csc133.a2w;


import static com.codename1.ui.CN.*;

import com.codename1.charts.util.ColorUtil;
import com.codename1.ui.*;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.plaf.Style;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;

import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class AppMain {

    private Form current;
    private Resources theme;
    DigitalClockComponent dclockc;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a " +
                    "networking error in the connection to "
                    + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }
/**
 * This start method will create the clock varuiables.
 * The font of the display is changed to make it easier to read
 * */
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form clockForm = new Form("Digit clock");
        Style clockStyle = new Style();
        Font t = Font.createSystemFont(Font.FACE_SYSTEM,
                Font.STYLE_BOLD,
                Font.SIZE_MEDIUM);
        clockStyle.setBgColor(ColorUtil.rgb(255,153,51));
        clockStyle.setFgColor(ColorUtil.WHITE);
        clockForm.getToolbar().setUnselectedStyle(clockStyle);
        clockForm.getToolbar().getTitleComponent().setUnselectedStyle(clockStyle);
        clockForm.getToolbar().getTitleComponent().getAllStyles().setFont(t);
        clockForm.getAllStyles().setBgTransparency(255);
        clockForm. getAllStyles().setBgColor(ColorUtil.GRAY);
        clockForm.setLayout(new BorderLayout());
        clockForm.add(BorderLayout.CENTER, newDefaultClock(10, 10,
                ColorUtil.GREEN));
        clockForm.show();

    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    public void destroy() {
    }
/**
 * This method will update the ledcolor, padding and margin.
 * It will return the clock instance with the updated parameters
 * */
    DigitalClockComponent newDefaultClock(int m, int p, int ledcolor){
        DigitalClockComponent aClock = new DigitalClockComponent();
        aClock.getAllStyles().setPadding(p,p,p,p);
        aClock.getAllStyles().setMargin(m,m,m,m);
        aClock.setLedColor(ledcolor);
        return aClock;

    }

}
